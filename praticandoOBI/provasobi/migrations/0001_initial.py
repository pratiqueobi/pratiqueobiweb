# Generated by Django 2.1 on 2018-12-14 01:31

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('usuarios', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alternativa',
            fields=[
                ('codalternativa', models.AutoField(db_column='codAlternativa', primary_key=True, serialize=False)),
                ('letraalternativa', models.CharField(blank=True, db_column='letraAlternativa', max_length=10, null=True)),
                ('textoalternativa', models.TextField(blank=True, db_column='textoAlternativa', null=True)),
            ],
            options={
                'db_table': 'alternativa',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Classificacao',
            fields=[
                ('codclassificacao', models.AutoField(db_column='codClassificacao', primary_key=True, serialize=False)),
                ('tituloclassificacao', models.TextField(blank=True, db_column='tituloClassificacao', null=True)),
            ],
            options={
                'verbose_name_plural': 'Classificações',
                'db_table': 'classificacao',
                'managed': True,
                'verbose_name': 'Classificação',
            },
        ),
        migrations.CreateModel(
            name='Problema',
            fields=[
                ('codproblema', models.AutoField(db_column='codProblema', primary_key=True, serialize=False)),
                ('numeroproblema', models.IntegerField(blank=True, db_column='numeroProblema', null=True)),
                ('tituloproblema', models.TextField(blank=True, db_column='tituloProblema', null=True)),
                ('enunciadoproblema', models.TextField(blank=True, db_column='enunciadoProblema', null=True)),
                ('regrasproblema', models.TextField(blank=True, db_column='regrasProblema', null=True)),
                ('imgproblema', models.TextField(blank=True, db_column='imgProblema', default='', null=True)),
                ('classificacao', models.ManyToManyField(blank=True, to='provasobi.Classificacao')),
            ],
            options={
                'db_table': 'problema',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Prova',
            fields=[
                ('codprova', models.AutoField(db_column='codProva', primary_key=True, serialize=False)),
                ('anoprova', models.IntegerField(blank=True, db_column='anoProva', null=True)),
                ('nivelprova', models.IntegerField(blank=True, db_column='nivelProva', null=True)),
                ('faseprova', models.IntegerField(blank=True, db_column='faseProva', null=True)),
                ('urlprova', models.URLField(blank=True, db_column='urlProva', default='https://olimpiada.ic.unicamp.br/passadas/', null=True, unique=True)),
            ],
            options={
                'ordering': ['anoprova'],
                'db_table': 'prova',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProvaPerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codprovaperson', models.IntegerField(db_column='codProvaPerson', default='0', null=True)),
                ('titulo', models.TextField(blank=True, db_column='titulo', default='', null=True)),
                ('ano', models.CharField(blank=True, db_column='ano', default='', max_length=20, null=True)),
                ('dificuldade', models.IntegerField(blank=True, db_column='dificuldade', default=0, null=True)),
                ('observacoes', models.TextField(blank=True, db_column='observacoes', default='', null=True)),
                ('autor', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='usuarios.Profile')),
            ],
            options={
                'verbose_name_plural': 'Provas personalizadas',
                'verbose_name': 'Prova personalizada',
            },
        ),
        migrations.CreateModel(
            name='Questao',
            fields=[
                ('codquestao', models.AutoField(db_column='codQuestao', primary_key=True, serialize=False)),
                ('numeroquestao', models.IntegerField(blank=True, db_column='numeroQuestao', null=True)),
                ('enunciadoquestao', models.TextField(blank=True, db_column='enunciadoQuestao', null=True)),
                ('gabaritoquestao', models.CharField(blank=True, db_column='gabaritoQuestao', max_length=10, null=True)),
                ('imgquestao', models.CharField(blank=True, db_column='imgQuestao', default='', max_length=300, null=True)),
                ('codproblema', models.ForeignKey(blank=True, db_column='codProblema', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='cod_problemas_questao', to='provasobi.Problema')),
            ],
            options={
                'verbose_name_plural': 'Questões',
                'db_table': 'questao',
                'managed': True,
                'verbose_name': 'Questão',
            },
        ),
        migrations.AddField(
            model_name='provaperson',
            name='questoes',
            field=models.ManyToManyField(blank='True', to='provasobi.Questao'),
        ),
        migrations.AlterUniqueTogether(
            name='prova',
            unique_together={('anoprova', 'faseprova', 'nivelprova')},
        ),
        migrations.AddField(
            model_name='problema',
            name='codprova',
            field=models.ForeignKey(blank=True, db_column='codProva', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='provasobi.Prova'),
        ),
        migrations.AddField(
            model_name='alternativa',
            name='codquestao',
            field=models.ForeignKey(blank=True, db_column='codQuestao', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='provasobi.Questao'),
        ),
        migrations.AlterUniqueTogether(
            name='problema',
            unique_together={('tituloproblema',)},
        ),
    ]
